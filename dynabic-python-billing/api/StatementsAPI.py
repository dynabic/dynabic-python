#!/usr/bin/env python
"""
StatementsAPI.py
Copyright 2011 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
"""
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/../')
import model

class StatementsAPI(object):

    def __init__(self, apiClient):
      self.apiClient = apiClient

    def GetStatementsForSubscription(self, subscriptionId, pageNumber, pageSize, ):
        """GetStatementsForSubscription
        Args:
            subscriptionId -- subscription Id
            pageNumber -- page number
            pageSize -- page size

        Return:
            list<Statement> -- an instance of Statement"""

        # Parse inputs
        resourcePath = '/statements/subscription/{subscriptionId}.{format}?pageNumber={pageNumber}&pageSize={pageSize}'
        resourcePath = resourcePath.replace('{format}', 'json')
        resourcePath = resourcePath.replace('*', '')
        method = 'GET'

        queryParams = {}
        headerParams = {}


        if subscriptionId != None:
            resourcePath = resourcePath.replace('{subscriptionId}', self.apiClient.toPathValue(subscriptionId))
        if pageNumber != None:
            resourcePath = resourcePath.replace('{pageNumber}', self.apiClient.toPathValue(pageNumber))
        if pageSize != None:
            resourcePath = resourcePath.replace('{pageSize}', self.apiClient.toPathValue(pageSize))


        # Make the API Call
        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          None, headerParams)
        if not response:
            return None


        # Create output objects if the response has more than one object
        responseObjects = []
        for responseObject in response:
          responseObjects.append(self.apiClient.deserialize(responseObject,
                                                         'Statement'))
        return responseObjects
